#
# k8s-cms
# Kubernetes Intergration
# Helm Values
# 

imagePullSecrets: []
nameOverride: "k8s-cms"
fullnameOverride: ""
environment: develop 

metadata:
  # additional labels to apply to all deployed objects
  labels:
    app: k8s-cms
    release: alpha

# cms configuration
config:
  configPath: /cms/config/cms.conf
  proxyService:
    pollInterval: 15
  rankingService: 
    configPath: /cms/config/cms.ranking.config
  database:
    subPath: k8s_cms_db_data

replicas:
  contest:
    minCount: 1
    maxCount: 24
  worker:
    minCount: 1
    maxCount: 24 # max 24
  adminWebCount: 1
  masterCount: 1
  
# configure the images to deploy
images:
  pullPolicy: IfNotPresent
  database:
    name: cms-db
    repository: npoverflow/cms-db
    tag: latest
  logging:
    name: cms-log
    repository: npoverflow/cms-log
    tag: latest
  resources:
    name: cms-resources
    repository: npoverflow/cms-resource
    tag: latest
  scoring:
    name: cms-scoring
    repository: npoverflow/cms-scoring
    tag: latest
  evaluation:
    name: cms-evaluation
    repository: npoverflow/cms-evaluation
    tag: latest
  proxy:
    name: cms-proxy
    repository: npoverflow/cms-proxy
    tag: latest
  printing:
    name: cms-printing
    repository: npoverflow/cms-printing
    tag: latest
  checker:
    name: cms-checker
    repository: npoverflow/cms-checker
    tag: latest
  admin:
    name: cms-web-admin
    repository: npoverflow/cms-web-admin
    tag: latest
  ranking:
    name: cms-web-ranking
    repository: npoverflow/cms-web-ranking
    tag: latest
  contest:
    name: cms-web-contest
    repository: npoverflow/cms-web-contest
    tag: latest
  worker:
    name: cms-worker
    repository: npoverflow/cms-worker
    tag: latest
  master:
    name: k8s-cms-master
    repository: npoverflow/k8s-cms-master
    tag: latest

services:
  database:
    name: postgresql
    type: ClusterIP
  logging:
    name: k8s-cms-logging
    type: ClusterIP
  resources:
    name: k8s-cms-resources
    type: ClusterIP
  scoring:
    name: k8s-cms-scoring
    type: ClusterIP
  evaluation:
    name: k8s-cms-evaluation
    type: ClusterIP
  proxy:
    name: k8s-cms-proxy
    type: ClusterIP
  admin:
    name: k8s-cms-admin
    type: ClusterIP
  printing:
    name: k8s-cms-printing
    type: ClusterIP
  ranking:
    name: k8s-cms-ranking
    type: ClusterIP
  checker:
    name: k8s-cms-checker
    type: ClusterIP
  contest:
    name: k8s-cms-contest
    type: ClusterIP
  worker:
    # worker services is headless
    name: k8s-cms-worker

  ## external services
  webAdmin:
    name: k8s-cms-web-admin
    type: NodePort
  webRanking:
    name: k8s-cms-web-ranking
    type: NodePort
  webContest:
    name: k8s-cms-web-contest
    type: NodePort
  master:
    name: k8s-cms-master
    type: NodePort

## resource limits
resources:
  # guarantee QOS
  database:
    requests:
      cpu: 700m
      memory: 512Mi
    limits:
      cpu: 700m
      memory: 512Mi
  logging:
    requests:
      cpu: 30m
      memory: 200Mi
    limits:
      cpu: 30m
      memory: 400Mi
  resources:
    requests:
      cpu: 3m
      memory: 128Mi
    limits:
      cpu: 60m
      memory: 150Mi
  # guarantee QOS
  scoring:
    requests:
      cpu: 80m
      memory: 250Mi
    limits:
      cpu: 80m
      memory: 250Mi
  # guarantee QOS
  evaluation:
    requests:
      cpu: 80m
      memory: 200Mi
    limits:
      cpu: 80m
      memory: 200Mi
  # guarantee QOS
  proxy:
    requests:
      cpu: 30m
      memory: 150Mi
    limits:
      cpu: 30m
      memory: 150Mi
  printing: 
    requests:
      cpu: 3m
      memory: 130Mi
    limits:
      cpu: 60m
      memory: 130Mi
  # guarantee QOS
  checker:
    requests:
      cpu: 40m
      memory: 140Mi
    limits:
      cpu: 40m
      memory: 140Mi
  ranking:
    requests:
      cpu: 20m
      memory: 80Mi
    limits:
      cpu: 20m
      memory: 80Mi
  # guarantee QOS
  admin:
    requests:
      cpu: 150m
      memory: 350Mi
    limits:
      cpu: 150m
      memory: 350Mi
  contest:
    requests:
      cpu: 700m
      memory: 600Mi
    limits:
      cpu: 900m
      memory: 1000Mi
  # guarantee QOS
  worker:
    requests:
      cpu: 950m
      memory: 1200Mi
    limits:
      cpu: 950m
      memory: 1200Mi
  # TODO: profile master resource usage
  # guarantee QOS
  master: {}

nodeSelector: {}

tolerations:
  contest:
    - key: hosting-qos
      operator: Equal
      value: transient
      effect: NoSchedule
  worker:
    - key: hosting-qos
      operator: Equal
      value: transient
      effect: NoSchedule

affinity: {}

security:
  serviceAccount:
    name: k8s-cms-service-sa

# ingress configuration
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
  hosts:
    # configure hostnames for ingress services
    # change hostnames to your own domains and ensure you update tls hosts below
    - host: contest.k8s-cms.io
      serviceName: k8s-cms-web-contest
      paths: [ "/" ]
    - host: admin.k8s-cms.io
      serviceName: k8s-cms-web-admin
      paths: [ "/" ]
    - host: ranking.k8s-cms.io
      serviceName: k8s-cms-web-ranking
      paths: [ "/" ]
    - host: master.k8s-cms.io
      serviceName: k8s-cms-master
      paths: [ "/" ]
    
  # configure tls certificate secrets for HTTPs
  # if using certificate generation, the sercrets do not have to exist
  tls: 
    - secretName: k8s-cms-tls-cert
      # change hostnames to match hostnames in ingress.hosts
      hosts:
        - contest.k8s-cms.io
        - admin.k8s-cms.io
        - ranking.k8s-cms.io
        - master.k8s-cms.io
  
# config for cert generation.
# Requires cert-manager to be enabled and ingress to be configured 
# correctly to work (ie. manually check dns hosts resolves to  ingress ip)
# When environment!=production, certGenerate generates untrusted certifcates for testing
# When environment=production, certGenerate trusted certifcates with letsencrypt
# NOTE: ensure that cert generation works before using production environment
# as there are low rate limits on trust certifcate generation.
certGenerate:
  # whether to enable certificate generation
  enabled: false 
  # Email address used for ACME registration
  email: yr.email.address.here@gmaild.om

# addons
# nginx ingress controller
nginx-ingress: 
  # whether to deploy a ingress controller
  # recommended to set to true, as custom configuration of the ingress controller 
  # is needed for k8s-cms to work correctly
  enabled: true
  controller:
    # custom config of ingress controller for k8s-cms
    # remember to restart nginx-ingress pods after updating the config
    config:
      proxy-body-size: "100m" # adjust contest import upload size is larger
    metrics:
      enabled: true # prometheus metrics

# nginx nginx controller
cert-manager:
  enabled: true # whether to deploy cert manager 

prometheus-operator:
  enabled: true # whether to deploy prometheus-operator
